#!/bin/bash
#
# Composed and tested by ce107 on ross/weddell (Opteron system)
# Should work fine on EM64T and other AMD64 compatible Intel systems
# a) Processor specific flags:
#    1) for more speed on Core2 processors replace -xW with -xT
#    2) for more speed on Pentium4 based EM64T processors replaces -xW with -xP
# b) For more speed, provided your data size doesn't exceed 2GB you can
# remove -fPIC which carries a performance penalty of 2-6%.
# c) Provided that the libraries you link to are compiled with -fPIC this
# optfile should work.
# d) You can replace -fPIC with -mcmodel=medium which may perform faster
# then -fPIC and still support data sizes over 2GB per process but all
# the libraries you link to myst be compiled with -fPIC or -mcmodel=medium
# e) Changed from -O3 to -O2 to avoid buggy Intel v.10 compilers. Speed
# impact appears to be minimal.
#
# DON'T FORGET to set environment variable MPI_INC_DIR to the include
# directory of your MPI implementation

FC=mpif90
F90C=mpif90
CC=mpicc
F90FIXEDFORMAT='-fixed -Tf'
DEFINES='-DWORDLENGTH=4'
LINK='mpif90'
CPP='cpp  -traditional -P'
EXTENDED_SRC_FLAG='-132'

NOOPTFLAGS='-O0 -g -m64 -fPIC'
NOOPTFILES=''

# INCLUDEDIRS='/opt/scyld/openmpi/1.6.5/intel/include/'
#INCLUDES='-I/usr/include/openmpi -pthread -I/usr/lib64/OMPI/intel'
# LIBS='-L/opt/scyld/openmpi/1.6.5/intel/lib/'
# -lmpi_f77 -lmpi -lopen-rte -lopen-pal -libverbs -ldat -lrt -ltorque -lnuma -ldl -lnsl -lutil'

if test "x$DEVEL" != x ; then
    FFLAGS="$FFLAGS -132 -w95 -W0 -WB -convert big_endian -assume byterecl -fPIC -O0 -g -noalign -fpstkchk -check all -fpe0 -traceback -ftrapuv -fpmodel except -warn all"
else
    FFLAGS="$FFLAGS -132 -w95 -W0 -WB -convert big_endian -assume byterecl -fPIC"
fi

#  Note that the -mp switch is for ieee "maintain precision" and is
#  roughly equivalent to -ieee
if test "x$IEEE" = x ; then
    #  No need for IEEE-754
    FOPTIM='-O2 -align'
else
    #  Try to follow IEEE-754
    FOPTIM='-O0 -noalign -mp'
fi
F90FLAGS=$FFLAGS
F90OPTIM=$FOPTIM
CFLAGS='-O2 -ip -fPIC'

